package com.filesharing.gui;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

import com.filesharing.actionManagersImp.WithinOverlayCommunicationManagerImp;
import com.filesharing.clientactionsImp.ClientImp;
import com.filesharing.main.NodeLoop;
import com.filesharing.utilsImp.Constants;

/**
 *
 * @author Chamath
 */
public class FileSharingSystem extends javax.swing.JFrame {
    
    private NodeLoop nodeLoop;
    private List<String> searchIPs;

    /**
     * Creates new form MusicFinder
     */
    
    public FileSharingSystem() {
        initComponents();
        
        // reset
        DefaultTableModel dataModel = (DefaultTableModel)searchTable.getModel();
        dataModel.setRowCount(0);
        
        unregisterButton.setEnabled(false);
        searchButton.setEnabled(false);
        filenameTextField.setEnabled(false);
        nodeLoop = new NodeLoop();
        searchIPs = new ArrayList<String>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        filenameLabel = new javax.swing.JLabel();
        filenameTextField = new javax.swing.JTextField();
        nodeRegisteredLabel = new javax.swing.JLabel();
        nodeIsRegisteredLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        unregisterButton = new javax.swing.JButton();
        searchResponseNameLabel = new javax.swing.JLabel();
        searchResponseLabel = new javax.swing.JLabel();
        searchResultLabel = new javax.swing.JLabel();
        sepBetSetupSearch = new javax.swing.JSeparator();
        mainHeadingLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        consoleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contentPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        contentPane.setMaximumSize(new java.awt.Dimension(641, 589));
        contentPane.setMinimumSize(new java.awt.Dimension(641, 589));

        filenameLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        filenameLabel.setText("Filename:");

        filenameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        filenameTextField.setText("Enter filename to search...");
        filenameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filenameTextFieldMouseClicked(evt);
            }
        });
        filenameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filenameTextFieldActionPerformed(evt);
            }
        });

        nodeRegisteredLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        nodeRegisteredLabel.setText("Node Registered:");

        nodeIsRegisteredLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        nodeIsRegisteredLabel.setText("No");

        searchButton.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        unregisterButton.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        unregisterButton.setText("Unregister");
        unregisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unregisterButtonActionPerformed(evt);
            }
        });

        searchResponseNameLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        searchResponseNameLabel.setText("Search Response:");

        searchResponseLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        searchResponseLabel.setText("Press search");

        searchResultLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        searchResultLabel.setText("Search Results");

        mainHeadingLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        mainHeadingLabel.setText("File Sharing Application");

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Filename", "IP Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(searchTable);
        searchTable.getColumnModel().getColumn(0).setResizable(false);
        searchTable.getColumnModel().getColumn(1).setResizable(false);

        consoleLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        consoleLabel.setText("Console");

        consoleTextArea.setEditable(false);
        consoleTextArea.setColumns(20);
        consoleTextArea.setRows(5);
        jScrollPane1.setViewportView(consoleTextArea);

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(consoleLabel)
                .addContainerGap())
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentPaneLayout.createSequentialGroup()
                        .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nodeRegisteredLabel))
                        .addGap(53, 53, 53)
                        .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unregisterButton)
                            .addComponent(nodeIsRegisteredLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(contentPaneLayout.createSequentialGroup()
                        .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, contentPaneLayout.createSequentialGroup()
                                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(filenameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchResponseNameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(contentPaneLayout.createSequentialGroup()
                                        .addComponent(filenameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(searchResponseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sepBetSetupSearch, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                        .addComponent(mainHeadingLabel)
                        .addGap(204, 204, 204))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                        .addComponent(searchResultLabel)
                        .addGap(272, 272, 272))))
        );

        contentPaneLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {registerButton, unregisterButton});

        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainHeadingLabel)
                .addGap(18, 18, 18)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodeRegisteredLabel)
                    .addComponent(nodeIsRegisteredLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(unregisterButton))
                .addGap(18, 18, 18)
                .addComponent(sepBetSetupSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameLabel)
                    .addComponent(searchButton)
                    .addComponent(filenameTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchResponseNameLabel)
                    .addComponent(searchResponseLabel))
                .addGap(17, 17, 17)
                .addComponent(searchResultLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(consoleLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void unregisterButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    	nodeIsRegisteredLabel.setText("Unregistration Sent");
    	new ClientImp().leaveTheOverlay();
    }                                                

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {         
    	if (!nodeLoop.isAlive()) {
    		nodeLoop.start(); 
            nodeIsRegisteredLabel.setText("Registration Sent");
            unregisterButton.setEnabled(true);
            searchButton.setEnabled(true);
            filenameTextField.setEnabled(true);
		}
    }                                              

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	resetSearchResultsTable();
    	String query = filenameTextField.getText().replaceAll(" ", "_");
    	new WithinOverlayCommunicationManagerImp().flooodTheMessage(Constants.NODE_IP, Constants.NODE_PORT, query, Constants.TTL);
    }                                            

    private void filenameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void filenameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {
        filenameTextField.setText(null);
    }
    
    private void updateTextArea(final String text) {
  	  SwingUtilities.invokeLater(new Runnable() {
  	    public void run() {
  	    	if (text.length() > 16) {
				String line = text.substring(16);
				
				// update search results table
				String[] splitted = line.split(" ");
	  	    	if(splitted.length > 1 && splitted[1].equalsIgnoreCase("SEROK")){
	  	    		String serverIP = splitted[3];
	  	    		
	  	    		String files = "";
	  	    		for (int i = 6; i < splitted.length; i++) {
	  	    			String fileName = splitted[i];
						files += fileName.replaceAll("_", " ");
					}
	  	    		
	  	    		if (!searchIPs.contains(serverIP)) {
	  	  	    		updateSearchTable(new String[]{serverIP, files});
	  	  	    		searchIPs.add(serverIP);
					}
	  	    	}
			}
  	    	
  	    	consoleTextArea.append(text);
  	    }
  	  });
  	}
  	 
  	private void redirectSystemStreams() {
  	  OutputStream out = new OutputStream() {
  	    @Override
  	    public void write(int b) throws IOException {
  	      updateTextArea(String.valueOf((char) b));
  	    }
  	 
  	    @Override
  	    public void write(byte[] b, int off, int len) throws IOException {
  	      updateTextArea(new String(b, off, len));
  	    }
  	 
  	    @Override
  	    public void write(byte[] b) throws IOException {
  	      write(b, 0, b.length);
  	    }
  	  };
  	 
  	  System.setOut(new PrintStream(out, true));
  	  System.setErr(new PrintStream(out, true));
  	}
  	
  	//input: list with two dimensional string array to display on table
  	private void updateSearchTable(String[] results){
  		DefaultTableModel dataModel = (DefaultTableModel)searchTable.getModel();
  		dataModel.addRow(results);
  		dataModel.fireTableDataChanged();
  	}
  	
  	private void resetSearchResultsTable() {
  		DefaultTableModel dataModel = (DefaultTableModel)searchTable.getModel();
  		dataModel.setRowCount(0);
  		dataModel.fireTableDataChanged();
  		
  		searchIPs = null;
  		searchIPs = new ArrayList<>();
  	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileSharingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileSharingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileSharingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileSharingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    FileSharingSystem frame = new FileSharingSystem();
                    frame.setTitle("File Sharing Application");
                    frame.setLocation(350, 100);
                    frame.setVisible(true);
                    frame.redirectSystemStreams();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel consoleLabel;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JPanel contentPane;
    private javax.swing.JLabel filenameLabel;
    private javax.swing.JTextField filenameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mainHeadingLabel;
    private javax.swing.JLabel nodeIsRegisteredLabel;
    private javax.swing.JLabel nodeRegisteredLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchResponseLabel;
    private javax.swing.JLabel searchResponseNameLabel;
    private javax.swing.JLabel searchResultLabel;
    private javax.swing.JTable searchTable;
    private javax.swing.JSeparator sepBetSetupSearch;
    private javax.swing.JButton unregisterButton;
    // End of variables declaration
}



